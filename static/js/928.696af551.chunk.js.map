{"version":3,"file":"static/js/928.696af551.chunk.js","mappings":"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","sources":["components/AppAside.tsx","views/users/Users.tsx","views/products/Products.tsx","views/categories/Categories.tsx","routes.ts","components/AppBreadcrumb.tsx","components/AppContent.tsx","components/AppFooter.tsx","assets/brand/logo.ts","components/AppHeader.tsx","components/AppSidebarNav.tsx","assets/brand/sygnet.ts","_nav.tsx","components/AppSidebar.tsx","layout/DefaultLayout.tsx"],"sourcesContent":["import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { CCloseButton, CSidebar, CSidebarHeader } from '@coreui/react-pro'\n\nimport { useTypedSelector } from '../store'\n\nconst AppAside = () => {\n  const dispatch = useDispatch()\n  const asideShow = useTypedSelector((state) => state.asideShow)\n\n  return (\n    <CSidebar\n      colorScheme=\"light\"\n      size=\"lg\"\n      overlaid\n      placement=\"end\"\n      visible={asideShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', asideShow: visible })\n      }}\n    >\n      <CSidebarHeader className=\"bg-transparent\">\n        <CCloseButton\n          className=\"float-end\"\n          onClick={() => dispatch({ type: 'set', asideShow: false })}\n        />\n      </CSidebarHeader>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppAside)\n","import React from 'react'\n\nimport avatar1 from '../../assets/images/avatars/1.jpg'\nimport avatar2 from '../../assets/images/avatars/2.jpg'\nimport avatar3 from '../../assets/images/avatars/3.jpg'\nimport avatar4 from '../../assets/images/avatars/4.jpg'\nimport avatar5 from '../../assets/images/avatars/5.jpg'\nimport avatar6 from '../../assets/images/avatars/6.jpg'\nimport {\n  CAvatar,\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react-pro'\n\nimport { cilPeople } from '@coreui/icons'\n\nimport CIcon from '@coreui/icons-react'\n\nconst Users = (): JSX.Element => {\n  const tableExample = [\n    {\n      avatar: { src: avatar1, status: 'success' },\n      name: 'Yiorgos Avraamu',\n      email: 'test@test.com',\n      phone: '01123456789',\n      location: 'New Cairo',\n      status: 'Activated',\n      activity: '10 sec ago',\n    },\n    {\n      avatar: { src: avatar2, status: 'danger' },\n      name: 'Avram Tarasios',\n      email: 'test@test.com',\n      phone: '01123456789',\n      location: 'New Cairo',\n      status: 'Disabled',\n      activity: '5 minutes ago',\n    },\n    {\n      avatar: { src: avatar3, status: 'warning' },\n      name: 'Quintin Ed',\n      email: 'test@test.com',\n      phone: '01123456789',\n      location: 'New Cairo',\n      status: 'Verified',\n      activity: '1 hour ago',\n    },\n    {\n      avatar: { src: avatar4, status: 'secondary' },\n      name: 'Enéas Kwadwo',\n      email: 'test@test.com',\n      phone: '01123456789',\n      location: 'New Cairo',\n      status: 'Verified',\n      activity: 'Last month',\n    },\n    {\n      avatar: { src: avatar5, status: 'success' },\n      name: 'Agapetus Tadeáš',\n      email: 'test@test.com',\n      phone: '01123456789',\n      location: 'New Cairo',\n      status: 'Verified',\n      activity: 'Last week',\n    },\n    {\n      avatar: { src: avatar6, status: 'danger' },\n      name: 'Friderik Dávid',\n      email: 'test@test.com',\n      phone: '01123456789',\n      location: 'New Cairo',\n      status: 'Activated',\n      activity: 'Last week',\n    },\n  ]\n\n  return (\n    <>\n      <CRow>\n        <CCol xs>\n          <CCard className=\"mb-4\">\n            <CCardBody>\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow>\n                    <CTableHeaderCell className=\"text-center\">\n                      <CIcon icon={cilPeople} />\n                    </CTableHeaderCell>\n                    <CTableHeaderCell>User</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">\n                      Location\n                    </CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">\n                      Phone Number\n                    </CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">\n                      Status\n                    </CTableHeaderCell>\n                    <CTableHeaderCell>Activity</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">\n                      Options\n                    </CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {tableExample.map((user, index) => (\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\n                      <CTableDataCell className=\"text-center\">\n                        <CAvatar\n                          size=\"md\"\n                          src={user.avatar.src}\n                          status={user.avatar.status}\n                        />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div>{user.name}</div>\n                        <div className=\"small text-medium-emphasis text-nowrap\">\n                          {user.email}\n                        </div>\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <div>{user.phone}</div>\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <div>{user.location}</div>\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <div>{user.status}</div>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div className=\"small text-medium-emphasis\">\n                          Last login\n                        </div>\n                        <div className=\"fw-semibold text-nowrap\">\n                          {user.activity}\n                        </div>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div\n                          style={{\n                            justifyContent: 'space-evenly',\n                            width: '100%',\n                            display: 'inline-flex',\n                          }}\n                        >\n                          <CButton color=\"primary\" variant=\"outline\">\n                            Edit\n                          </CButton>\n                          <CButton color=\"danger\" variant=\"outline\">\n                            Delete\n                          </CButton>\n                        </div>\n                      </CTableDataCell>\n                    </CTableRow>\n                  ))}\n                </CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Users\n","import React from 'react'\n\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react-pro'\n\nimport { cilFile } from '@coreui/icons'\n\nimport CIcon from '@coreui/icons-react'\n\nconst Products = (): JSX.Element => {\n  const tableExample = [\n    {\n      image:\n        'https://connectedapp20200512063146.azurewebsites.net/api/connectedadmin/GetImage/e390d7cb-e9e4-4a55-94e6-866b63547653.jpg',\n      name: 'Villa at Al Sokhna',\n      price: '2500000 EGP',\n      seller: 'Soha El-Hadary',\n      status: 'Reserved',\n      date: 'Jun 11, 2021',\n    },\n    {\n      image:\n        'https://connectedapp20200512063146.azurewebsites.net/api/connectedadmin/GetImage/a5bc6b5f-f679-4307-8ab2-41de29d273ea.jpg',\n      name: 'Mercedes GLA 200',\n      price: '5000000 EGP',\n      seller: 'Khaled Afify',\n      status: 'Available',\n      date: 'Aug 28, 2022',\n    },\n    {\n      image:\n        'https://connectedapp20200512063146.azurewebsites.net/api/connectedadmin/GetImage/e390d7cb-e9e4-4a55-94e6-866b63547653.jpg',\n      name: 'Villa at Al Sokhna',\n      price: '2500000 EGP',\n      seller: 'Soha El-Hadary',\n      status: 'Reserved',\n      date: 'Jun 11, 2021',\n    },\n    {\n      image:\n        'https://connectedapp20200512063146.azurewebsites.net/api/connectedadmin/GetImage/a5bc6b5f-f679-4307-8ab2-41de29d273ea.jpg',\n      name: 'Mercedes GLA 200',\n      price: '5000000 EGP',\n      seller: 'Khaled Afify',\n      status: 'Available',\n      date: 'Aug 28, 2022',\n    },\n  ]\n\n  return (\n    <>\n      <CRow>\n        <CCol xs>\n          <CCard className=\"mb-4\">\n            <CCardBody>\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow>\n                    <CTableHeaderCell className=\"text-center\">\n                      <CIcon icon={cilFile} />\n                    </CTableHeaderCell>\n                    <CTableHeaderCell>Name</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">\n                      Price\n                    </CTableHeaderCell>\n                    <CTableHeaderCell>Seller</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">\n                      Status\n                    </CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">\n                      Date\n                    </CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">\n                      Options\n                    </CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {tableExample.map((item, index) => (\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\n                      <CTableDataCell className=\"text-center\">\n                        <img alt={item.name} src={item.image} width=\"70px\" />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div>{item.name}</div>\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <div>{item.price}</div>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div>{item.seller}</div>\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <div>{item.status}</div>\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <div>{item.date}</div>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div\n                          style={{\n                            justifyContent: 'space-evenly',\n                            width: '100%',\n                            display: 'inline-flex',\n                          }}\n                        >\n                          <CButton color=\"primary\" variant=\"outline\">\n                            Edit\n                          </CButton>\n                          <CButton color=\"danger\" variant=\"outline\">\n                            Delete\n                          </CButton>\n                        </div>\n                      </CTableDataCell>\n                    </CTableRow>\n                  ))}\n                </CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Products\n","import React from 'react'\n\nconst Categories = (): JSX.Element => {\n  return <>Welcome to categories view!</>\n}\n\nexport default Categories\n","import React, { ReactNode } from 'react'\nimport Users from './views/users/Users'\nimport Products from './views/products/Products'\nimport Categories from './views/categories/Categories'\n\nexport type route = {\n  component?: ReactNode\n  name?: string\n  path?: string\n  routes?: route[]\n}\n\n// examples\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\nconst Blank = React.lazy(() => import('./views/blank/Blank'))\n\n/**\n * See {@link https://github.com/ReactTraining/react-router/tree/master/packages/react-router-config GitHub}.\n */\nconst routes = [\n  { path: '/', name: 'Home' },\n  { path: '/dashboard', name: 'Dashboard', component: Dashboard },\n  { path: '/users', name: 'Users', component: Users },\n  { path: '/products', name: 'Products', component: Products },\n  { path: '/categories', name: 'Categories', component: Categories },\n  { path: '/blank', name: 'Blank', component: Blank },\n]\n\nexport default routes\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react-pro'\n\ntype breadcrumb = {\n  pathname?: string\n  name?: boolean | string\n  active?: boolean\n}\n\ntype route = {\n  path: string\n  name: string\n}\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname: string, routes: route[]) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location: string) => {\n    const breadcrumbs: breadcrumb[] = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      breadcrumbs.push({\n        pathname: currentPathname,\n        name: routeName,\n        active: index + 1 === array.length ? true : false,\n      })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active\n              ? { active: true }\n              : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react-pro'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.component && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  element={<route.component />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react-pro'\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      <div>\n        <span className=\"ms-1\">&copy; 2023 Connected VIP Assistant.</span>\n      </div>\n      <div className=\"ms-auto\">\n        <span className=\"me-1\">Powered by</span>\n        <a\n          href=\"https://coreui.io/react\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          CoreUI for React\n        </a>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","export const logo = [\n  '690 134',\n  `\n  <title>coreui react pro</title>\n  <g>\n    <g style=\"fill:#00a1ff\">\n      <path d=\"M362.0177,90.1512,353.25,69.4149a.2507.2507,0,0,0-.2559-.1914H343.01a.2263.2263,0,0,0-.2559.2559V90.0233a.5657.5657,0,0,1-.64.64h-1.2163a.5652.5652,0,0,1-.64-.64V46.5028a.5655.5655,0,0,1,.64-.64H353.442a9.9792,9.9792,0,0,1,7.7437,3.2324A12.2,12.2,0,0,1,364.13,57.64a12.4389,12.4389,0,0,1-2.24,7.584,9.37,9.37,0,0,1-6.08,3.7441c-.1709.086-.2139.1915-.128.3194l8.7041,20.6084.064.2558q0,.5127-.5757.5118h-1.1523A.703.703,0,0,1,362.0177,90.1512ZM342.754,48.3593v18.496a.2259.2259,0,0,0,.2559.2559h10.3037a7.6713,7.6713,0,0,0,6.0166-2.5918,9.8807,9.8807,0,0,0,2.3037-6.8164,10.2875,10.2875,0,0,0-2.272-6.9756,7.6033,7.6033,0,0,0-6.0483-2.624H343.01A.2263.2263,0,0,0,342.754,48.3593Z\"/>\n      <path d=\"M401.3263,48.1034H381.2945a.2262.2262,0,0,0-.2558.2559v18.496a.2259.2259,0,0,0,.2558.2559h13.8238a.5664.5664,0,0,1,.6406.64v.96a.5663.5663,0,0,1-.6406.6406H381.2945a.2263.2263,0,0,0-.2558.2559v18.56a.2258.2258,0,0,0,.2558.2558h20.0318a.5671.5671,0,0,1,.6406.6407v.96a.566.566,0,0,1-.6406.64H379.1827a.5653.5653,0,0,1-.64-.64V46.5028a.5656.5656,0,0,1,.64-.64h22.1436a.5664.5664,0,0,1,.6406.64v.96A.5663.5663,0,0,1,401.3263,48.1034Z\"/>\n      <path d=\"M439.047,90.1512l-2.4317-8.832a.2971.2971,0,0,0-.32-.1924H419.5274a.2957.2957,0,0,0-.32.1924l-2.3681,8.7676a.6577.6577,0,0,1-.7036.5762H414.919a.5385.5385,0,0,1-.5756-.7041l12.0317-43.584a.6436.6436,0,0,1,.7041-.5117h1.6a.6442.6442,0,0,1,.7041.5117l12.16,43.584.0644.1923q0,.5127-.64.5118h-1.2163A.6428.6428,0,0,1,439.047,90.1512ZM419.9435,78.9188a.3031.3031,0,0,0,.2236.0967h15.4883a.3048.3048,0,0,0,.2236-.0967c.0645-.0635.0742-.1162.0322-.1592l-7.872-28.9287c-.043-.0849-.086-.1279-.128-.1279s-.0859.043-.1279.1279L419.9112,78.76C419.8683,78.8026,419.879,78.8553,419.9435,78.9188Z\"/>\n      <path d=\"M456.6017,87.911a11.6372,11.6372,0,0,1-3.3277-8.7041V57.1913a11.4158,11.4158,0,0,1,3.36-8.5762,12.0941,12.0941,0,0,1,8.8-3.2637,12.2566,12.2566,0,0,1,8.8643,3.2315,11.3927,11.3927,0,0,1,3.36,8.6084v.64a.5663.5663,0,0,1-.6406.6407l-1.28.0634q-.6408,0-.64-.5761v-.8321a9.289,9.289,0,0,0-2.6558-6.9121,10.6734,10.6734,0,0,0-14.0161,0,9.2854,9.2854,0,0,0-2.6563,6.9121V79.3993a9.2808,9.2808,0,0,0,2.6563,6.9121,10.67,10.67,0,0,0,14.0161,0,9.2843,9.2843,0,0,0,2.6558-6.9121v-.7686q0-.5757.64-.5752l1.28.0635a.5667.5667,0,0,1,.6406.6406v.5118a11.4952,11.4952,0,0,1-3.36,8.64,13.6227,13.6227,0,0,1-17.6963,0Z\"/>\n      <path d=\"M514.4376,46.5028v.96a.5658.5658,0,0,1-.64.6406H503.046a.2263.2263,0,0,0-.2559.2559v41.664a.566.566,0,0,1-.6406.64h-1.2158a.5652.5652,0,0,1-.64-.64V48.3593a.2266.2266,0,0,0-.2558-.2559H489.8619a.5656.5656,0,0,1-.64-.6406v-.96a.5656.5656,0,0,1,.64-.64H513.798A.5658.5658,0,0,1,514.4376,46.5028Z\"/>\n      <path d=\"M522.0665,89.5116a2.8385,2.8385,0,0,1-.8-2.0488,2.9194,2.9194,0,0,1,.8-2.1114,2.7544,2.7544,0,0,1,2.08-.832,2.8465,2.8465,0,0,1,2.9438,2.9434,2.7541,2.7541,0,0,1-.832,2.08,2.9221,2.9221,0,0,1-2.1118.8008A2.754,2.754,0,0,1,522.0665,89.5116Z\"/>\n      <path d=\"M542.4054,88.0077a11.3123,11.3123,0,0,1-3.2-8.416v-5.44a.5656.5656,0,0,1,.64-.64h1.2158a.5661.5661,0,0,1,.64.64v5.5039a9.1424,9.1424,0,0,0,2.5283,6.72,8.9745,8.9745,0,0,0,6.6875,2.5605,8.7908,8.7908,0,0,0,9.28-9.28V46.5028a.5655.5655,0,0,1,.64-.64h1.2163a.566.566,0,0,1,.64.64V79.5917a11.2545,11.2545,0,0,1-3.2325,8.416,13.0618,13.0618,0,0,1-17.0556,0Z\"/>\n      <path d=\"M580.35,88.1034a10.4859,10.4859,0,0,1-3.36-8.1279v-1.792a.5663.5663,0,0,1,.64-.6407h1.0884a.5668.5668,0,0,1,.64.6407v1.6a8.5459,8.5459,0,0,0,2.752,6.6562,10.5353,10.5353,0,0,0,7.36,2.4961,9.8719,9.8719,0,0,0,6.9761-2.3681,8.2161,8.2161,0,0,0,2.56-6.336,8.4,8.4,0,0,0-1.12-4.416,11.3812,11.3812,0,0,0-3.3281-3.3926,71.6714,71.6714,0,0,0-6.1763-3.7119,71.0479,71.0479,0,0,1-6.24-3.84,12.1711,12.1711,0,0,1-3.4238-3.68,10.2614,10.2614,0,0,1-1.28-5.3438,9.8579,9.8579,0,0,1,3.0718-7.7441,12.0122,12.0122,0,0,1,8.32-2.752q5.6954,0,8.96,3.1036a10.8251,10.8251,0,0,1,3.2642,8.2246v1.6a.5658.5658,0,0,1-.64.64h-1.1519a.5652.5652,0,0,1-.64-.64V56.8075a8.8647,8.8647,0,0,0-2.624-6.6885,9.9933,9.9933,0,0,0-7.232-2.5273,9.37,9.37,0,0,0-6.5278,2.1435,7.8224,7.8224,0,0,0-2.3682,6.1123,7.8006,7.8006,0,0,0,1.0244,4.16,10.387,10.387,0,0,0,3.0078,3.0391,62.8714,62.8714,0,0,0,5.9522,3.4882,71.0575,71.0575,0,0,1,6.72,4.2559,13.4674,13.4674,0,0,1,3.648,3.9365,10.049,10.049,0,0,1,1.28,5.1836,10.7177,10.7177,0,0,1-3.2637,8.1924q-3.2637,3.0717-8.832,3.0723Q583.71,91.1757,580.35,88.1034Z\"/>\n    </g>\n    <g style=\"fill:#80d0ff;\">\n      <path d=\"M672.3,59.6528a3.4937,3.4937,0,0,0-3.1992,0,2.6556,2.6556,0,0,0-1.0645,1.1016,3.4924,3.4924,0,0,0-.375,1.6484V67.645a3.4925,3.4925,0,0,0,.375,1.6485,2.6559,2.6559,0,0,0,1.0645,1.1015,3.4937,3.4937,0,0,0,3.1992,0,2.6551,2.6551,0,0,0,1.0644-1.1015,3.4926,3.4926,0,0,0,.3755-1.6485V62.4028a3.4925,3.4925,0,0,0-.3755-1.6484A2.6547,2.6547,0,0,0,672.3,59.6528Z\"/>\n      <path d=\"M685.49,46h-66a2,2,0,0,0-2,2V81.9161a2,2,0,0,0,2,2h66a2,2,0,0,0,2-2V48A2,2,0,0,0,685.49,46ZM639.5851,64.439a4.8213,4.8213,0,0,1-1.9751,1.914,6.1869,6.1869,0,0,1-2.9467.6768H630.861v6.9394h-3.3716V56.0786h7.1739a6.1447,6.1447,0,0,1,2.9467.6826,4.85,4.85,0,0,1,1.9751,1.9258,6.2486,6.2486,0,0,1,0,5.752Zm15.8194,9.53L651.371,66.771h-2.0451v7.1982h-3.3716V56.0659h7.8379a4.9978,4.9978,0,0,1,2.5967.6641,4.5005,4.5005,0,0,1,1.7349,1.8769,6.7322,6.7322,0,0,1,0,5.6231,4.4814,4.4814,0,0,1-1.7412,1.8769,4.6377,4.6377,0,0,1-1.1708.4848l4.2777,7.3775Zm22.085-6.4111a7.1411,7.1411,0,0,1-.812,3.4639,5.6854,5.6854,0,0,1-2.2949,2.3134,7.5835,7.5835,0,0,1-6.8536,0,5.6854,5.6854,0,0,1-2.2949-2.3134,7.1411,7.1411,0,0,1-.812-3.4639V62.4888a7.1438,7.1438,0,0,1,.812-3.4639,5.6972,5.6972,0,0,1,2.2949-2.3135,7.5918,7.5918,0,0,1,6.8536,0,5.6972,5.6972,0,0,1,2.2949,2.3135,7.1438,7.1438,0,0,1,.812,3.4639Z\"/>\n      <path d=\"M635.5705,59.604a2.0521,2.0521,0,0,0-1.0766-.2773h-3.8882v4.4541h3.8882a2.0283,2.0283,0,0,0,1.0644-.2764,1.9,1.9,0,0,0,.72-.7813,2.503,2.503,0,0,0,.2583-1.1572,2.6239,2.6239,0,0,0-.252-1.1748A1.8478,1.8478,0,0,0,635.5705,59.604Z\"/>\n      <path d=\"M654.1893,59.5728a1.6479,1.6479,0,0,0-.9229-.2588h-4.1958v4.2089h4.1958a1.6259,1.6259,0,0,0,.9106-.2587,1.6741,1.6741,0,0,0,.6089-.7383,2.8225,2.8225,0,0,0,.2276-1.1074,2.683,2.683,0,0,0-.2154-1.1075A1.6737,1.6737,0,0,0,654.1893,59.5728Z\"/>\n    </g>\n    <g style=\"fill:#3c4b64\">\n      <g>\n        <path d=\"M99.835,36.0577l-39-22.5167a12,12,0,0,0-12,0l-39,22.5166a12.0339,12.0339,0,0,0-6,10.3924V91.4833a12.0333,12.0333,0,0,0,6,10.3923l39,22.5167a12,12,0,0,0,12,0l39-22.5167a12.0331,12.0331,0,0,0,6-10.3923V46.45A12.0334,12.0334,0,0,0,99.835,36.0577Zm-2,55.4256a4,4,0,0,1-2,3.4641l-39,22.5167a4.0006,4.0006,0,0,1-4,0l-39-22.5167a4,4,0,0,1-2-3.4641V46.45a4,4,0,0,1,2-3.4642l39-22.5166a4,4,0,0,1,4,0l39,22.5166a4,4,0,0,1,2,3.4642Z\"/>\n        <path d=\"M77.8567,82.0046h-2.866a4,4,0,0,0-1.9247.4934L55.7852,91.9833,35.835,80.4648V57.4872l19.95-11.5185,17.2893,9.4549a3.9993,3.9993,0,0,0,1.9192.4906h2.8632a2,2,0,0,0,2-2V51.2024a2,2,0,0,0-1.04-1.7547L59.628,38.9521a8.0391,8.0391,0,0,0-7.8428.09L31.8346,50.56a8.0246,8.0246,0,0,0-4,6.9287v22.976a8,8,0,0,0,4,6.9283l19.95,11.5186a8.0429,8.0429,0,0,0,7.8433.0879l19.19-10.5312a2,2,0,0,0,1.0378-1.7533v-2.71A2,2,0,0,0,77.8567,82.0046Z\"/>\n      </g>\n      <g>\n        <path d=\"M172.58,45.3618a15.0166,15.0166,0,0,0-15,14.9995V77.6387a15,15,0,0,0,30,0V60.3613A15.0166,15.0166,0,0,0,172.58,45.3618Zm7,32.2769a7,7,0,0,1-14,0V60.3613a7,7,0,0,1,14,0Z\"/>\n        <path d=\"M135.9138,53.4211a7.01,7.01,0,0,1,7.8681,6.0752.9894.9894,0,0,0,.9843.865h6.03a1.0108,1.0108,0,0,0,.9987-1.0971,15.0182,15.0182,0,0,0-15.7162-13.8837,15.2881,15.2881,0,0,0-14.2441,15.4163V77.2037A15.288,15.288,0,0,0,136.0792,92.62a15.0183,15.0183,0,0,0,15.7162-13.8842,1.0107,1.0107,0,0,0-.9987-1.0971h-6.03a.9894.9894,0,0,0-.9843.865,7.01,7.01,0,0,1-7.8679,6.0757,7.1642,7.1642,0,0,1-6.0789-7.1849V60.6057A7.1638,7.1638,0,0,1,135.9138,53.4211Z\"/>\n        <path d=\"M218.7572,72.9277a12.1585,12.1585,0,0,0,7.1843-11.0771V58.1494A12.1494,12.1494,0,0,0,213.7921,46H196.835a1,1,0,0,0-1,1V91a1,1,0,0,0,1,1h6a1,1,0,0,0,1-1V74h6.6216l7.9154,17.4138a1,1,0,0,0,.91.5862h6.5911a1,1,0,0,0,.91-1.4138Zm-.8157-11.0771A4.1538,4.1538,0,0,1,213.7926,66h-9.8511V54h9.8511a4.1538,4.1538,0,0,1,4.1489,4.1494Z\"/>\n        <path d=\"M260.835,46h-26a1,1,0,0,0-1,1V91a1,1,0,0,0,1,1h26a1,1,0,0,0,1-1V85a1,1,0,0,0-1-1h-19V72h13a1,1,0,0,0,1-1V65a1,1,0,0,0-1-1h-13V54h19a1,1,0,0,0,1-1V47A1,1,0,0,0,260.835,46Z\"/>\n        <path d=\"M298.835,46h-6a1,1,0,0,0-1,1V69.6475a7.0066,7.0066,0,1,1-14,0V47a1,1,0,0,0-1-1h-6a1,1,0,0,0-1,1V69.6475a15.0031,15.0031,0,1,0,30,0V47A1,1,0,0,0,298.835,46Z\"/>\n        <rect x=\"307.835\" y=\"46\" width=\"8\" height=\"38\" rx=\"1\"/>\n      </g>\n    </g>\n  </g>\n`,\n]\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { useTypedSelector } from '../store'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react-pro'\nimport { cilApplicationsSettings, cilMenu } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppBreadcrumb } from './index'\nimport { logo } from '../assets/brand/logo'\n\nconst AppHeader = (): JSX.Element => {\n  const dispatch = useDispatch()\n  const sidebarShow = useTypedSelector((state) => state.sidebarShow)\n  const asideShow = useTypedSelector((state) => state.asideShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderBrand className=\"mx-auto d-md-none\">\n          <CIcon icon={logo} height={48} />\n        </CHeaderBrand>\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <CNavItem>\n            <CNavLink to=\"/dashboard\" component={NavLink}>\n              {/*Navigation*/}\n            </CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n        <CHeaderToggler\n          className=\"px-md-0 me-md-3\"\n          onClick={() => dispatch({ type: 'set', asideShow: !asideShow })}\n        >\n          <CIcon icon={cilApplicationsSettings} size=\"lg\" />\n        </CHeaderToggler>\n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React, { FC, ReactNode } from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react-pro'\nimport CIcon from '@coreui/icons-react'\n\nimport { Badge, NavItem } from '../_nav'\n\ninterface AppSidebarNavProps {\n  items: NavItem[]\n}\n\nexport const AppSidebarNav: FC<AppSidebarNavProps> = ({ items }) => {\n  const location = useLocation()\n  const navLink = (\n    name: string | JSX.Element,\n    icon: string | ReactNode,\n    badge?: Badge,\n  ) => {\n    return (\n      <>\n        {icon && typeof icon === 'string' ? (\n          <CIcon icon={icon} customClassName=\"nav-icon\" />\n        ) : (\n          icon\n        )}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item: NavItem, index: number) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item: NavItem, index: number) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item: NavItem, index: number) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item: NavItem, index: number) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","export const sygnet = [\n  '160 160',\n  `\n  <title>coreui logo</title>\n  <g>\n    <g style=\"fill:#fff;\">\n      <path d=\"M125,47.091,86,24.5743a12,12,0,0,0-12,0L35,47.091a12.0336,12.0336,0,0,0-6,10.3923v45.0334a12.0335,12.0335,0,0,0,6,10.3923l39,22.5166a11.9993,11.9993,0,0,0,12,0l39-22.5166a12.0335,12.0335,0,0,0,6-10.3923V57.4833A12.0336,12.0336,0,0,0,125,47.091Zm-2,55.4257a4,4,0,0,1-2,3.464L82,128.4974a4,4,0,0,1-4,0L39,105.9807a4,4,0,0,1-2-3.464V57.4833a4,4,0,0,1,2-3.4641L78,31.5025a4,4,0,0,1,4,0l39,22.5167a4,4,0,0,1,2,3.4641Z\"/>\n      <path d=\"M103.0216,93.0379h-2.866a4,4,0,0,0-1.9246.4935L80.95,103.0167,61,91.4981V68.5206L80.95,57.002l17.2894,9.455a4,4,0,0,0,1.9192.4905h2.8632a2,2,0,0,0,2-2V62.2357a2,2,0,0,0-1.04-1.7547L84.793,49.9854a8.0391,8.0391,0,0,0-7.8428.09L57,61.5929A8.0243,8.0243,0,0,0,53,68.5216v22.976a8,8,0,0,0,4,6.9283l19.95,11.5185a8.0422,8.0422,0,0,0,7.8433.0879l19.19-10.5311a2,2,0,0,0,1.0378-1.7534v-2.71A2,2,0,0,0,103.0216,93.0379Z\"/>\n    </g>\n  </g>\n`,\n]\n","import React from 'react'\nimport { cilSpeedometer, cilUser, cilFile, cilSitemap } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport { CNavItem } from '@coreui/react-pro'\nimport { ElementType } from 'react'\n\nexport type Badge = {\n  color: string\n  text: string\n}\n\nexport type NavItem = {\n  component: string | ElementType\n  name: string | JSX.Element\n  icon?: string | JSX.Element\n  badge?: Badge\n  to: string\n  items?: NavItem[]\n}\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: 'Dashboard',\n    icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n    to: '/dashboard',\n  },\n  {\n    component: CNavItem,\n    name: 'Users',\n    icon: <CIcon icon={cilUser} customClassName=\"nav-icon\" />,\n    to: '/users',\n  },\n  {\n    component: CNavItem,\n    name: 'Products',\n    icon: <CIcon icon={cilFile} customClassName=\"nav-icon\" />,\n    to: '/products',\n  },\n  {\n    component: CNavItem,\n    name: 'Categories',\n    icon: <CIcon icon={cilSitemap} customClassName=\"nav-icon\" />,\n    to: '/categories',\n  },\n  {\n    component: CNavItem,\n    name: 'Blank',\n    icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n    badge: {\n      color: 'info-gradient',\n      text: 'NEW',\n    },\n    to: '/blank',\n  },\n]\n\nexport default _nav\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport {\n  CSidebar,\n  CSidebarBrand,\n  CSidebarNav,\n  CSidebarToggler,\n} from '@coreui/react-pro'\n\nimport { useTypedSelector } from '../store'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport CIcon from '@coreui/icons-react'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\nimport connectedLogoWhiteLG from '../assets/images/connected/connected-w-lg.png'\nimport { sygnet } from '../assets/brand/sygnet'\n// sidebar nav config\nimport navigation from '../_nav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useTypedSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useTypedSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex\">\n        <img\n          alt=\"connected-logo\"\n          className=\"sidebar-brand-full\"\n          src={connectedLogoWhiteLG}\n          height={35}\n        />\n        <CIcon className=\"sidebar-brand-narrow\" icon={sygnet} height={35} />\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() =>\n          dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })\n        }\n      />\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\nimport {\n  AppAside,\n  AppContent,\n  AppSidebar,\n  AppFooter,\n  AppHeader,\n} from '../components/index'\n\nconst DefaultLayout = (): JSX.Element => {\n  return (\n    <>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light dark:bg-transparent\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n      <AppAside />\n    </>\n  )\n}\n\nexport default DefaultLayout\n"],"names":["AppAside","dispatch","useDispatch","asideShow","useTypedSelector","state","_jsx","CSidebar","colorScheme","size","overlaid","placement","visible","onVisibleChange","type","children","CSidebarHeader","className","CCloseButton","onClick","React","Users","tableExample","avatar","src","avatar1","status","name","email","phone","location","activity","avatar2","avatar3","avatar4","avatar5","avatar6","_Fragment","CRow","CCol","xs","CCard","CCardBody","_jsxs","CTable","align","hover","responsive","CTableHead","color","CTableRow","CTableHeaderCell","CIcon","icon","cilPeople","CTableBody","map","user","index","CTableDataCell","CAvatar","style","justifyContent","width","display","CButton","variant","Products","cilFile","image","price","seller","date","item","alt","Categories","path","component","AppBreadcrumb","currentLocation","useLocation","pathname","breadcrumbs","split","reduce","prev","curr","array","currentPathname","concat","routeName","getRouteName","routes","currentRoute","find","route","push","active","length","getBreadcrumbs","CBreadcrumb","CBreadcrumbItem","href","breadcrumb","_createElement","key","AppContent","CContainer","lg","Suspense","fallback","CSpinner","Routes","idx","Route","element","Navigate","to","replace","AppFooter","CFooter","target","rel","logo","AppHeader","sidebarShow","CHeader","position","fluid","CHeaderToggler","cilMenu","CHeaderBrand","height","CHeaderNav","CNavItem","CNavLink","NavLink","cilApplicationsSettings","CHeaderDivider","AppSidebarNav","_ref","items","navLink","badge","customClassName","CBadge","text","navItem","rest","Component","navGroup","_item$items","String","toggler","startsWith","sygnet","cilSpeedometer","cilUser","cilSitemap","AppSidebar","unfoldable","sidebarUnfoldable","CSidebarBrand","connectedLogoWhiteLG","CSidebarNav","SimpleBar","navigation","CSidebarToggler","DefaultLayout"],"sourceRoot":""}